--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==1) then v20=nil;function v20(v30,v31,v32)if v32 then local v64=0 -0;local v65;while true do if (v64==(1651 -(76 + 464 + 1111))) then v65=(v30/((7 -5)^(v31-((4788 -3127) -(25 + 1635)))))%(2^(((v32-(1842 -(984 + 857))) -(v31-(1 -0))) + 1 + 0));return v65-(v65%(1807 -(928 + (2460 -(1066 + 516)))));end end else local v66=(7 -5)^(v31-(1 + 0));return (((v30%(v66 + v66))>=v66) and ((5 -3) -1)) or (0 + 0);end end v21=nil;v17=2;end if (v17==3) then v23=nil;function v23()local v38=0 -0;local v39;local v40;local v41;local v42;while true do if (v38==(0 + 0)) then v39,v40,v41,v42=v1(v15,v18,v18 + (1135 -(91 + 1041)));v18=v18 + 4 + 0;v38=1998 -(1267 + 730);end if (v38==((15 -11) -3)) then return (v42 * (16778799 -(1064 + 519))) + (v41 * (182032 -(23268 + 93228))) + (v40 * (253 + 3)) + v39;end end end v24=nil;v17=4;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v33)if (v1(v33,2)==79) then v19=v0(v3(v33,1,1));return "";else local v67=v2(v0(v33,16));if v19 then local v73=0;local v74;while true do if (v73==1) then return v74;end if (v73==0) then v74=v5(v67,v19);v19=nil;v73=1;end end else return v67;end end end);v17=1;end if (v17==6) then v28=nil;function v28()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;local v50;while true do if (v43==(1 + 0)) then v46=nil;v47=nil;v43=2;end if (v43~=0) then else v44=925 -(496 + 429);v45=nil;v43=1;end if (v43~=2) then else v48=nil;v49=nil;v43=3;end if (v43==(1 + 2)) then v50=nil;while true do local v75=1912 -(101 + 1811);while true do if (v75==(0 -0)) then if (v44==0) then local v92=0;while true do if (v92~=0) then else v45={};v46={};v92=1 + 0;end if (v92==(2 -1)) then v47={};v48={v45,v46,nil,v47};v92=2;end if (v92==2) then v44=1 + 0;break;end end end if (v44==2) then local v93=0;local v94;while true do if (v93==(0 -0)) then v94=69 -(12 + 57);while true do if (v94==0) then for v104=1,v23() do local v105=0;local v106;local v107;while true do if (v105~=(2 -1)) then else while true do if ((0 + 0)==v106) then v107=v21();if (v20(v107,1293 -(1008 + 284),1198 -(1069 + 128))~=0) then else local v204=0;local v205;local v206;local v207;local v208;local v209;while true do if (0~=v204) then else v205=0;v206=nil;v204=1;end if (v204==(651 -(379 + 271))) then v207=nil;v208=nil;v204=2;end if (v204~=2) then else v209=nil;while true do if (v205==(1250 -(294 + 956))) then v206=0;v207=nil;v205=1;end if (v205==(1 + 0)) then local v235=0 -0;while true do if (v235==1) then v205=3 -1;break;end if (0==v235) then v208=nil;v209=nil;v235=1 -0;end end end if (v205~=2) then else while true do if (v206~=(1 + 0)) then else local v277=0 -0;local v278;while true do if (0~=v277) then else v278=1597 -(650 + 947);while true do if ((2 -1)==v278) then v206=444 -(183 + 259);break;end if (v278==(0 + 0)) then local v299=0 + 0;while true do if (v299==(1658 -(500 + 1157))) then v278=1 + 0;break;end if (v299==(0 -0)) then v209={v22(),v22(),nil,nil};if (v207==(0 -0)) then local v309=0;local v310;local v311;while true do if (v309==(0 -0)) then v310=0;v311=nil;v309=1;end if (1~=v309) then else while true do if ((326 -(130 + 196))==v310) then v311=1762 -(633 + 1129);while true do if (v311==(0 + 0)) then v209[3]=v22();v209[2 + 2]=v22();break;end end break;end end break;end end elseif (v207==1) then v209[1152 -(1112 + 37)]=v23();elseif (v207==2) then v209[3]=v23() -(2^16);elseif (v207==3) then local v318=0 -0;local v319;while true do if (v318~=0) then else v319=0 + 0;while true do if (v319==(1415 -(347 + 1068))) then v209[8 -5]=v23() -(2^(1811 -(1781 + 14)));v209[4]=v22();break;end end break;end end end v299=1906 -(870 + 1035);end end end end break;end end end if (v206==(2 + 1)) then if (v20(v208,3,3)==(1 -0)) then v209[4]=v50[v209[230 -(83 + 143)]];end v45[v104]=v209;break;end if ((0 -0)==v206) then local v280=0;while true do if (1~=v280) then else v206=1 + 0;break;end if (v280==(605 -(156 + 449))) then local v290=0;while true do if (v290==1) then v280=4 -3;break;end if (v290==(0 -0)) then v207=v20(v107,1 + 1,3);v208=v20(v107,1849 -(379 + 1466),6);v290=1;end end end end end if (v206~=2) then else local v281=0;local v282;while true do if ((0 + 0)~=v281) then else v282=0 + 0;while true do if (v282~=(258 -(174 + 83))) then else v206=2 + 1;break;end if (v282==0) then local v300=0;while true do if (v300==(1267 -(241 + 1025))) then v282=855 -(766 + 88);break;end if (v300~=(0 + 0)) then else if (v20(v208,1,1392 -(755 + 636))==1) then v209[2]=v50[v209[3 -1]];end if (v20(v208,1 + 1,567 -(59 + 506))~=(1847 -(916 + 930))) then else v209[336 -(98 + 235)]=v50[v209[1242 -(383 + 856)]];end v300=36 -(12 + 23);end end end end break;end end end end break;end end break;end end end break;end end break;end if (v105==0) then v106=0;v107=nil;v105=28 -(10 + 17);end end end for v108=1,v23() do v46[v108-(1 + 0)]=v28();end v94=1;end if (v94~=1) then else for v110=1 + 0,v23() do v47[v110]=v23();end return v48;end end break;end end end v75=1 -0;end if (v75==(1 + 0)) then if (v44==(1086 -(892 + 193))) then local v95=695 -(310 + 385);while true do if (v95==(1396 -(1383 + 12))) then for v99=1 + 0,v49 do local v100=0 -0;local v101;local v102;local v103;while true do if (v100==(1 + 0)) then v103=nil;while true do if (v101==(1 + 0)) then if (v102==1) then v103=v21()~=0;elseif (v102==(1416 -(1272 + 142))) then v103=v24();elseif (v102==3) then v103=v25();end v50[v99]=v103;break;end if (v101~=(0 + 0)) then else local v114=0;while true do if (v114==1) then v101=1;break;end if (v114==0) then v102=v21();v103=nil;v114=1;end end end end break;end if (v100~=0) then else v101=0;v102=nil;v100=1;end end end v48[1286 -(186 + 1097)]=v21();v95=2 + 0;end if (v95~=2) then else v44=2;break;end if ((0 -0)==v95) then v49=v23();v50={};v95=1;end end end break;end end end break;end end end v29=nil;v17=7;end if (v17==2) then function v21()local v51=v1(v15,v18,v18);v18=v18 + 1;return v51;end v22=nil;function v22()local v52=0 -0;local v53;local v54;while true do if (v52==1) then return (v54 * (13 + 243)) + v53;end if (v52==(0 -0)) then v53,v54=v1(v15,v18,v18 + (896 -(212 + 682)));v18=v18 + (6 -4) + 0;v52=1 + 0;end end end v17=3;end if (v17==5) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end if (v17==7) then function v29(v34,v35,v36)local v55=v34[1];local v56=v34[2];local v57=v34[3];return function(...)local v68=1;local v69= -1;local v70={...};local v71=v11("#",...) -1;local function v72()local v76=v55;local v77=v56;local v78=v57;local v79=v27;local v80={};local v81={};local v82={};for v87=0,v71 do if (((4692 -(126 + (3223 -2167)))>=(4027 -(788 + 863))) and (v87>=v78)) then v80[v87-v78]=v70[v87 + 1];else v82[v87]=v70[v87 + 1 + (0 -0)];end end local v83=(v71-v78) + 1;local v84;local v85;while true do local v88=0 + 0;local v89;while true do if (((78 + 50)<=3328) and (v88==0)) then v89=1414 -(716 + 698);while true do if (((1540 + 1690)<(8853 -5104)) and (v89==(1 + 0 + 0))) then if (((5689 -2427)<=3423) and (v85<=(45 -25))) then if (((4629 -(123 + 30 + 27))>(13236 -10544)) and (v85<=(1 + 1 + 7))) then if ((v85<=(1539 -(564 + 971))) or (2753>(4722 -((866 -(4 + 46)) + 584)))) then if (((1545 -(315 + 370))==(2839 -(1038 + 941))) and (v85<=1)) then if ((v85>(0 + 0)) or ((201 + 392)>=2578)) then for v173=v84[2 + 0],v84[3 + 0] do v82[v173]=nil;end else v82[v84[2]]=v82[v84[3]] -v84[4 + 0];end elseif (((4565 -(154 + 42))>(2124 -1340)) and (v85<=(3 -1))) then local v116=663 -(611 + 52);local v117;local v118;local v119;local v120;while true do if ((((3675 -(311 + 1287)) + (3460 -1102))>=(829 + 554)) and (v116==(0 + 0))) then v117=312 -(247 + 65);v118=nil;v116=3 -2;end if (((1716 -(704 + 595))<(4442 -(4627 -(352 + 773)))) and (v116==(1 -0))) then v119=nil;v120=nil;v116=4 -2;end if ((v116==(1720 -(1020 + 698))) or ((438 + 774)>=(3099 + 1015))) then while true do if ((((1654 -(281 + 547)) -404)<(5636 -(260 + 1149))) and (v117==(1753 -(1432 + 321)))) then v118=v84[2];v119=v82[v118 + (6 -4)];v117=2 -1;end if (((5157 -(355 + 314))>=3919) and (v117==2)) then if (((14657 -11000)<=((584 + 4538) -(703 + 667))) and (v119>(339 -(325 + 14)))) then if ((v120<=v82[v118 + (2 -1)]) or ((868 + 1470 + 100)>(10476 -7418))) then local v259=1954 -(1360 + 594);local v260;local v261;while true do if ((v259==(2 -1)) or ((2289 + 933)<=(992 -538))) then while true do if (((1229 -458)==771) and (v260==(1289 -(74 + 1215)))) then v261=0 -0;while true do if (((877 -(652 + 136))<3345) and (v261==(0 + 0))) then v68=v84[3 + 0];v82[v118 + (440 -(230 + 207))]=v120;break;end end break;end end break;end if (((3947 -1276)==(3349 -(67 + 611))) and (0==v259)) then v260=0;v261=nil;v259=1 + 0;end end end elseif (((1251 + 285)>=(1486 -(1694 -(8 + 1096)))) and (v120>=v82[v118 + 1])) then local v262=0;local v263;while true do if ((v262==((0 -0) + (477 -(251 + 226)))) or ((6290 -(1475 + 446))<(2829 -(314 + 135)))) then v263=1524 -(469 + 1055);while true do if ((((2720 -(262 + 822)) -(61 + 538))<=(5602 -(597 + 19))) and (v263==(777 -(167 + 610)))) then v68=v84[(244 -(58 + 183)) + 0];v82[v118 + 2 + 0 + 1]=v120;break;end end break;end end end break;end if ((((9 -7) -1)==v117) or (3399>=3629)) then local v219=0;while true do if ((v219==1) or ((4165 -(1485 + 249))>=(6091 -3212))) then v117=2;break;end if (((0 + 0)==v219) or ((5153 -(1532 + 446))<=(432 + 12))) then v120=v82[v118] + v119;v82[v118]=v120;v219=1296 -(622 + 673);end end end end break;end end elseif ((((9556 -4741) -(362 + (64 -47)))>(4779 -(442 + 155))) and (v85>3)) then v82[v84[2 + 0]][v82[v84[3]]]=v82[v84[4]];else v82[v84[(4326 -2325) -(365 + 1634)]]=v36[v84[3]];end elseif (((2649 + 437)>(1981 -784)) and (v85<=(1101 -((601 -312) + (1320 -514))))) then if ((v85==(310 -((246 -109) + 58 + 110))) or (((5328 -3948) + 1169)>(11041 -6996))) then local v121=(2694 -(892 + 982)) -(166 + 654);local v122;local v123;local v124;while true do if (((7773 -4579)>2160) and (v121==(1398 -(309 + 1089)))) then v122=0 + 0;v123=nil;v121=(862 -(437 + 424)) + (489 -(267 + 222));end if ((v121==1) or ((7546 -4649)>(11469 -(7757 -(7 + 171))))) then v124=nil;while true do if ((((5093 -(13 + 52)) -(604 + 678 + 591))>=(4111 -(445 + 757))) and ((0 -0)==v122)) then local v220=247 -(147 + 100);while true do if (((1946 + 732)>=2315) and (v220==(0 + 0))) then v123=v84[2];v124=v82[v84[3]];v220=(2 + 0) -1;end if (((10971 -7923)==(4575 -(129 + 1398))) and (v220==1)) then v122=(1517 + 130) -(838 + 808);break;end end end if ((v122==1) or ((4602 -((1536 -(881 + 179)) + 226))==(2419 + 1053))) then v82[v123 + ((84 + 613) -(331 + 365))]=v124;v82[v123]=v124[v84[6 -2]];break;end end break;end end else local v125=0 + 0;local v126;while true do if (((0 + 0)==v125) or (4468<(1762 + 29))) then v126=v84[(2846 -1450) -(149 + 1245)];v82[v126](v12(v82,v126 + (2 -1),v69));break;end end end elseif (((5480 -(978 + 878))>=(4872 -2936)) and (v85<=(22 -15))) then v82[v84[1695 -(842 + 851)]][v84[640 -(582 + (266 -211))]]=v84[12 -8];elseif ((v85>((16 -9) + 1)) or (((3242 -(37 + 60)) -(711 + 616))==((6237 -(231 + 326)) -((315 -145) + 1273)))) then if (v82[v84[2]] or ((1109 -(198 + 542))>=((29677 -22346) -4759))) then v68=v68 + (864 -(254 + 609));else v68=v84[1 + 2];end else v68=v84[5 -2];end elseif ((3523<(5005 -(565 + 4))) and (v85<=(22 -8))) then if ((3895>3147) and (v85<=((1871 -(100 + 1770)) + 10))) then if ((4334>(744 + 1519)) and (v85>(1541 -(51 + (2094 -(518 + 96)))))) then v82[v84[3 -1]]();else v82[v84[2 + 0]][v84[3]]=v82[v84[7 -3]];end elseif ((4714<=(504 + 4452)) and (v85<=(8 + 4))) then if ((v82[v84[308 -(172 + 134)]]==v84[7 -3]) or ((6859 -3995)>=((1414 -793) + 3548))) then v68=v68 + 1;else v68=v84[3];end elseif (((27 -12)==((15 -9) + 9)) and (v85==((1113 -(592 + 450)) -(36 + 22)))) then do return;end else local v177=668 -(295 + 373);local v178;local v179;local v180;while true do if (((3722 -2073)<((3046 -(351 + 1053)) + 3027)) and ((1 + 1)==v177)) then for v223=856 -(637 + 218),v84[658 -(365 + 289)] do local v224=0 -0;local v225;while true do if (((1 + 0)==v224) or ((6090 -4593)>(167 + 3809))) then if ((v225[(1452 -(183 + 798)) -(295 + (468 -(263 + 30)))]==21) or ((116 + 1978)<((15561 -10198) -3502))) then v180[v223-(1 + 0)]={v82,v225[1312 -(782 + 527)]};else v180[v223-(1156 -(661 + 494))]={v35,v225[3]};end v81[ #v81 + 1]=v180;break;end if ((v224==(0 -0)) or (4455==246)) then v68=v68 + 1 + 0;v225=v76[v68];v224=1 -0;end end end v82[v84[2]]=v29(v178,v179,v36);break;end if ((v177==(2 -1)) or ((5843 -(697 + 701))>(3832 + 632))) then local v216=0;while true do if ((v216==(1617 -(1079 + 538))) or ((69 + 356)>(3 + 1012))) then v180={};v179=v9({},{__index=function(v238,v239)local v264=0;local v265;local v266;while true do if ((v264==(1 + 0)) or (2793>(8092 -4235))) then while true do if ((4139>=(1775 -(96 + 727))) and (v265==((383 -(24 + 359)) + 0))) then local v297=0;while true do if ((v297==(1566 -(258 + 1308))) or ((5249 -(92 + 265))<=(3360 + 1334))) then v266=v180[v239];return v266[1][v266[2 + 0]];end end end end break;end if (((2062 -1627)<(3282 -(150 + 191))) and (v264==(0 -0))) then v265=0 -0;v266=nil;v264=1;end end end,__newindex=function(v240,v241,v242)local v267=0 + 0;local v268;local v269;while true do if ((v267==(0 + 0)) or ((4663 -((47 -31) + 652))>=(10613 -(15060 -8581)))) then v268=0 + 0;v269=nil;v267=4 -3;end if ((v267==(2 -1)) or ((6875 -4329)<=(216 + 904 + 284))) then while true do if (((592 + 1032)>=(1862 -(106 + 292))) and (v268==(0 + 0))) then v269=v180[v241];v269[1859 -(1511 + 347)][v269[7 -5]]=v242;break;end end break;end end end});v216=1;end if ((v216==1) or ((4913 -(1442 + 392))==((1024 -494) + 698))) then v177=2;break;end end end if (((6211 -3805)>=107) and (v177==(0 -0))) then local v217=0 -0;while true do if ((v217==(0 + 0)) or (((8050 + 4217) -(11623 -3813))<=1326)) then v178=v77[v84[3]];v179=nil;v217=(1047 -(138 + 544)) -(15 + 349);end if ((v217==(1887 -(1437 + 449))) or (1324>(1870 + 1820))) then v177=1;break;end end end end end elseif ((v85<=(32 -15)) or ((7024 -3804)<(2540 + 40))) then if (((3627 + (1706 -(763 + 622)))==(4272 -(230 + 94))) and (v85<=(33 -18))) then local v129=326 -(173 + 16 + 137);local v130;local v131;local v132;local v133;while true do if ((v129==(0 -0)) or (421<67)) then local v210=0 + 0;while true do if (((565 + 2019)==(3965 -(1025 + 356))) and (v210==(2 -1))) then v129=253 -(249 + 3);break;end if ((v210==(0 -0)) or (3268<=((5468 -(589 + 194)) -2044))) then v130=v84[879 -(700 + 177)];v131,v132=v79(v82[v130](v12(v82,v130 + (1 -0),v84[3 + 0])));v210=1 + 0;end end end if ((4119>=(759 -475)) and (v129==(2 + 0))) then for v211=v130,v69 do local v212=1670 -(1266 + 404);local v213;local v214;while true do if ((v212==(1435 -(570 + 865))) or (4912==(1316 + 2018))) then v213=0 -(0 -0);v214=nil;v212=1 -0;end if ((2474>1714) and (v212==(1 -0))) then while true do if (((5634 -(540 + 999))>3619) and (v213==(0 + 0))) then v214=108 -(12 + 96);while true do if (((0 -0)==v214) or ((1108 -((606 -449) + 208))>3465)) then v133=v133 + 1 + 0;v82[v211]=v131[v133];break;end end break;end end break;end end end break;end if (((4353 -2620)>(3518 -2215)) and (v129==(610 -(605 + 4)))) then v69=(v132 + v130) -((203 + 201) -(35 + 368));v133=0;v129=904 -(64 + 838);end end elseif ((v85>(951 -((140 -62) + 857))) or (139>(4341 + 613))) then v82[v84[1319 -(949 + 368)]]=v35[v84[992 -(626 + 363)]];else local v182=0;local v183;local v184;local v185;while true do if (((2656 -(1590 + 60))<=(3190 -(600 + 1041))) and (v182==(468 -(262 + (1421 -(384 + 831)))))) then v183=0 -0;v184=nil;v182=1 -0;end if (((4223 + 78)>=(3263 -(850 + 11))) and ((2 -1)==v182)) then v185=nil;while true do if ((((1945 + 574) -(1350 + 227))<=3977) and ((1 + 0)==v183)) then for v243=1807 -(1452 + 354), #v81 do local v244=0 -0;local v245;local v246;local v247;while true do if (((758 -542)<(7501 -3320)) and (v244==((570 + 240) -(226 + 583)))) then v247=nil;while true do if ((v245==(1674 -(193 + 1480))) or ((1668 -1024)>=(10377 -6666))) then while true do if (((5069 -2684)==(2742 -(337 + 20))) and (v246==(0 + 0))) then v247=v81[v243];for v302=1512 -(649 + 863), #v247 do local v303=0 + 0;local v304;local v305;local v306;local v307;local v308;while true do if ((v303==(0 -0)) or ((4004 -2697)==(6401 -2947))) then v304=0;v305=nil;v303=14 -(7 + (1183 -(11 + 1166)));end if ((v303==2) or (1220<(2011 -(705 + 1076)))) then v308=nil;while true do if (((979 -533)<=(4097 -(206 + 1532))) and (v304==(1 + 1))) then while true do if (((3575 -1687)>=(41 + 74)) and (v305==(1 + 0))) then v308=v306[872 -(762 + 108)];if (((1569 + 1552)>=(9926 -7834)) and (v307==v82) and (v308>=v184)) then local v320=1848 -(1280 + 568);local v321;while true do if ((v320==(0 + 0)) or ((3104 + 594)<(479 + 1920))) then v321=(1919 -(464 + 1455)) + 0;while true do if (((2303 -((1190 -(824 + 30)) + 938))>(934 -(11 + 53))) and (v321==0)) then v185[v308]=v307[v308];v306[985 -((951 -315) + 257 + 91)]=v185;break;end end break;end end end break;end if (((4509 -(90 + 44))>=(6716 -3756)) and (v305==0)) then local v316=(0 + 0) -(664 -(130 + 534));local v317;while true do if (((6253 -3136)<=4972) and (v316==0)) then v317=0;while true do if ((v317==0) or ((4060 + 217)==2334)) then local v324=(2152 -(260 + 534)) -(1037 + 321);while true do if ((v324==(0 + 0)) or ((2201 -(1203 + 287))>(3772 -(360 + 115)))) then v306=v247[v302];v307=v306[96 -(27 + 47 + 21)];v324=1154 -(348 + 805);end if ((((2 + 1) -2)==v324) or ((6093 -(818 + 428))<(5422 -(283 + 1189)))) then v317=(2932 -(516 + 1209)) -(59 + 1147);break;end end end if (((6585 -2833)==(4039 -(8 + 279))) and ((2 -1)==v317)) then v305=1168 -(1030 + 137);break;end end break;end end end end break;end if (((0 -0)==v304) or ((3070 -(521 + 24 + 266))<=(1371 -(67 + 12 + 10)))) then v305=115 -(108 + 7);v306=nil;v304=4 -3;end if ((((52 + 1256) -773)==((1002 + 346) -813)) and (v304==(1113 -(570 + 542)))) then v307=nil;v308=nil;v304=2 + 0;end end break;end if ((3540>=3406) and ((1373 -(284 + 262 + 826))==v303)) then v306=nil;v307=nil;v303=323 -(64 + 257);end end end break;end end break;end if ((((9868 -(1280 + 247)) -(4097 -(86 + 224)))>(5571 -(364 + 707))) and (v245==(0 + 0))) then local v291=0 -0;while true do if (((1387 + 1089)<=2901) and (v291==1)) then v245=1571 -(845 + 725);break;end if (((2604 -1249)>=(1707 -1019)) and (v291==(0 + 0))) then v246=0;v247=nil;v291=1;end end end end break;end if ((v244==(0 + 0)) or (1816==(4656 -(1433 + 492)))) then v245=0 + 0;v246=nil;v244=(720 -(309 + 410)) -0;end end end break;end if (((2194 -1509)<=(793 + 557)) and (v183==0)) then local v232=0 -0;while true do if ((v232==(1744 -(1405 + (422 -(23 + 61))))) or ((2842 -2104)>(7915 -5790))) then v183=959 -(716 + 242);break;end if ((((2517 + 1199) -(942 + 405))<=(2631 -(110 + 36))) and (v232==(0 + 0))) then v184=v84[1 + (1931 -(539 + 1391))];v185={};v232=1;end end end end break;end end end elseif ((4761>(36 + 20)) and (v85<=(1709 -(852 + 839)))) then v82[v84[2]]=v84[3 -0] + v82[v84[4 + 0]];elseif ((v85==(4 + 15)) or (((19703 -(868 + 322)) -13597)<=(11178 -6749))) then v82[v84[1408 -(61 + 1345)]]= #v82[v84[1 + 2]];else v82[v84[1 + 1]]=v82[v84[(4063 -2434) -(1108 + 518)]][v84[8 -4]];end elseif (((334 + 109)>=23) and (v85<=((24 + 112) -106))) then if ((v85<=(66 -41)) or ((8550 -4290)<(1773 -601))) then if ((v85<=(5 + 17)) or ((4904 -(258 + 525))<=(4695 -(73 + (1490 -(200 + 232)))))) then if ((v85>(452 -(78 + 353))) or ((243 + 282)==(1851 + 1372))) then local v135=1926 -(190 + 1736);local v136;local v137;local v138;while true do if (((5113 -((252 -153) + 478))>=(2 + 51)) and (v135==(0 -0))) then v136=0;v137=nil;v135=723 -(715 + 7);end if ((v135==1) or (2351<((648 + 958) -782))) then v138=nil;while true do if (((6455 -(1550 + (521 -249)))>=(2302 + 1353)) and (v136==(532 -(444 + 88)))) then v137=0 -0;v138=nil;v136=1 -0;end if (((5159 -(1175 + 359))>=(2746 -(76 + 7))) and (v136==(1 -0))) then while true do if ((v137==(0 + 0)) or (((2617 -(1071 + 694)) + 2750)<1162)) then v138=v82[v84[4]];if ((2691>=1233) and  not v138) then InstrPoint=InstrPoint + 1 + 0;else local v276=957 -(377 + 580);while true do if (((256 -(138 + 118))==v276) or (((5984 -3148) + 1252)==(591 -336))) then v82[v84[3 -1]]=v138;InstrPoint=v84[12 -9];break;end end end break;end end break;end end break;end end else v82[v84[1 + 1 + 0]]=v82[v84[8 -5]];end elseif ((v85<=(63 -40)) or ((98 + 88)>(29 + 1041))) then v82[v84[2]]=v84[6 -(6 -3)]~=((1654 -(1484 + 170)) + 0);elseif ((v85>24) or ((725 + 2123)>=(5192 -(846 + 553)))) then local v188=(0 + 0) -0;local v189;local v190;local v191;while true do if (((124 + 484 + 917)<=(5794 -2908)) and (v188==1)) then v191=nil;while true do if ((3868<(5291 -((1878 -(1030 + 279)) + 90))) and ((740 -(723 + 17))==v189)) then local v233=0;while true do if ((v233==(1 + 0)) or ((1068 + 662)>=(4841 -1993))) then v189=1;break;end if ((v233==(0 + 0)) or ((1562 + 104)>(7519 -4817))) then v190=0 + 0;v191=nil;v233=1880 -(1251 + 628);end end end if ((2482>1156) and (v189==(1 + 0))) then while true do if (((83 + (329 -233))>(225 -90)) and (v190==(0 + 0))) then v191=v84[(215 + 1034) -(730 + 219 + 298)];do return v82[v191](v12(v82,v191 + (1025 -(1006 + 18)),v84[(3942 -2899) -(178 + 862)]));end break;end end break;end end break;end if ((v188==(0 + 0)) or ((2365 + 1104)==2721)) then v189=1718 -(1078 + 640);v190=nil;v188=1 + 0;end end else local v192=0;local v193;while true do if (((3578 + 876)>=(1132 -(122 + 83))) and (v192==(0 + 0))) then v193=v84[(5 -3) -0];v82[v193]=v82[v193](v12(v82,v193 + (2 -1),v84[11 -8]));break;end end end elseif ((v85<=(20 + 7)) or ((3323 + 1302)<(2243 -((1357 -(148 + 294)) + 212)))) then if ((533==(2218 -(662 + 1023))) and (v85>(19 + 2 + 5))) then local v141=(1756 -684) -(625 + 447);local v142;local v143;local v144;local v145;local v146;local v147;while true do if ((2914>=(2525 -1856)) and (v141==(642 -(218 + 422)))) then v146=nil;v147=nil;v141=1 + 2;end if ((v141==3) or ((4671 -(934 + 435))>=((21250 -6341) -11075))) then while true do if ((v142==(1178 -(867 + 309))) or ((3296 + 183)>=(10178 -6210))) then v147=nil;while true do if (((1 + (0 -0))==v143) or ((1271 + 350)>=(2833 -910))) then local v248=0 -0;local v249;while true do if ((v248==(0 + 0 + 0)) or ((4734 -(1239 + 676))<(319 -(149 + 15 + 9)))) then v249=0 -0;while true do if (((15066 -10430)>(889 + 870)) and (v249==(1 + 0))) then v143=2 + 0;break;end if ((((1946 -(480 + 1282)) + 3476)==(2870 + 790)) and (v249==((0 + 0) -0))) then local v292=1408 -(502 + 906);while true do if ((v292==((0 + 0) -0)) or ((1491 -1122)>(1858 -(675 -336)))) then v69=(v146 + v144) -(1 + 0);v147=0 -0;v292=(114 + 322) -(350 + (194 -109));end if ((v292==(3 -2)) or ((2159 -1366)>(2033 -(281 + 340)))) then v249=1;break;end end end end break;end end end if ((((19018 -(108 + 610)) -13475)>=(11542 -6850)) and (v143==(2 + 0))) then for v270=v144,v69 do local v271=0 -0;while true do if (((58 + 1657 + 59)>(197 + 1201)) and (v271==(0 + 0))) then v147=v147 + (602 -(288 + (777 -464)));v82[v270]=v145[v147];break;end end end break;end if (((1188 -(743 + 27))<=2050) and ((0 -0)==v143)) then local v250=898 -(206 + 454 + 238);local v251;while true do if (((1871 + 318)==(3932 -1743)) and ((0 + 0)==v250)) then v251=0;while true do if ((v251==(1605 -(692 + 912))) or ((9613 -6181)<(1068 + 1616))) then v143=1;break;end if ((v251==(0 -0)) or (2521>=(43 + 94 + 3052))) then local v293=565 -(75 + 490);while true do if (((820 -(29 + 791))==v293) or (4161<((1674 -999) + 3077))) then v144=v84[610 -(313 + (1694 -(40 + 1359)))];v145,v146=v79(v82[v144](v12(v82,v144 + (460 -(277 + 182)),v69)));v293=3 -2;end if (((1663 -1127)<(1393 + 1087 + 1663)) and (v293==(1 -0))) then v251=1;break;end end end end break;end end end end break;end if (((4217 -2284)<(12962 -9650)) and ((1 -0)==v142)) then local v226=0 + 0;while true do if (((294 -99)<=(1362 -408)) and (((2 -1) + 0)==v226)) then v142=2 + 0;break;end if ((3063<(998 + 2456)) and (v226==(0 -0))) then v145=nil;v146=nil;v226=1;end end end if (((1874 -(607 + 1146))<(2489 + (1706 -(41 + 67)))) and (v142==(1132 -(960 + 172)))) then v143=0;v144=nil;v142=228 -(215 + 12);end end break;end if ((v141==(1 + 0)) or ((5315 -(486 + (1073 -678)))<((14083 -9986) -(1268 + 405)))) then v144=nil;v145=nil;v141=5 -3;end if ((v141==(0 + 0)) or ((3470 + 76)==(15800 -11956))) then v142=0 + 0;v143=nil;v141=894 -(106 + 787);end end else local v148=0 -0;local v149;local v150;while true do if ((1462>=(126 -29)) and ((1967 -(1762 + 205))==v148)) then v149=0;v150=nil;v148=1 + 0;end if (((9243 -5959)<=(3116 + 587)) and (v148==(1 -0))) then while true do if ((0==v149) or ((8560 -4363)>=(3950 + 625))) then v150=v84[2 -0];v82[v150]=v82[v150](v12(v82,v150 + 1,v69));break;end end break;end end end elseif ((v85<=(104 -76)) or ((5254 -(709 + 158))<(4663 -(193 + 241)))) then local v151=1126 -(68 + 286 + 772);local v152;local v153;local v154;while true do if ((v151==(0 -0)) or ((9317 -5614)<=252)) then v152=0 + 0;v153=nil;v151=1;end if ((((7715 -4982) + 1256)==((20388 -14976) -1423)) and (v151==((2627 -1453) -(774 + 305 + 94)))) then v154=nil;while true do if (((300 + 1544)<=(20285 -15952)) and (v152==(0 -0))) then local v228=0 + 0;while true do if ((v228==(1740 -(1208 + 531))) or (((11428 -(160 + 311)) -(8277 -(246 + 993)))<(357 + (1776 -959)))) then v152=1 -0;break;end if ((((3520 -(793 + 747)) -(28 + 315))<((1580 + 1374) -(50 + 8 + 1))) and (v228==((0 -0) + 0))) then v153=0 -0;v154=nil;v228=1;end end end if (((5196 -2540)==(830 + 1826)) and (v152==(1 + 0))) then while true do if (((1895 -(523 + 644))<=2645) and (v153==(0 + 0))) then v154=v84[2];v82[v154]=v82[v154]();break;end end break;end end break;end end elseif ((v85>(143 -114)) or ((8827 -4210)<(352 -(232 + 15)))) then v82[v84[2]]=v82[v84[7 -4]] + v84[4];else local v195=0;local v196;local v197;local v198;while true do if ((v195==(970 -(555 + 414))) or (766>=(2584 -(130 + 30)))) then v198=nil;while true do if ((v196==(1 + 0)) or (1012==(40 + 452))) then while true do if ((v197==((0 -0) -0)) or (((7434 -(565 + 57)) -4835)<(1461 -398))) then v198=v84[4 -2];v82[v198](v82[v198 + (1014 -(627 + 386))]);break;end end break;end if ((v196==(1851 -(1096 + (2399 -1644)))) or ((5577 -3553)>=(2504 + 649))) then local v234=389 -(110 + 279);while true do if ((v234==(0 + 0)) or (4238>(13609 -9263))) then v197=358 -(94 + 264);v198=nil;v234=4 -3;end if ((1045==((3205 -2031) -(66 + (124 -61)))) and (v234==1)) then v196=250 -(40 + 209);break;end end end end break;end if (((1238 -(29 + 1209))==v195) or ((48 + 160)>((7362 -(1228 + 214)) -3231))) then v196=0 + 0;v197=nil;v195=(3 -2) -0;end end end elseif ((((318 + 2648) -1094)<=(3898 -(837 + 459))) and (v85<=(142 -107))) then if ((v85<=(1876 -(1662 + 182))) or ((8717 -5546)<1630)) then if (((2751 -(371 + 21 + 26))<3483) and (v85==(71 -40))) then local v155=0;local v156;while true do if ((v155==0) or ((2654 -1281)<=(5736 -4533))) then v156=v84[594 -(393 + 199)];do return v12(v82,v156,v69);end break;end end else local v157=(0 + 0) -0;local v158;while true do if (((0 -0)==v157) or ((2411 + 180)<(3159 -2371))) then v158=v84[8 -6];v82[v158](v12(v82,v158 + 1 + 0,v84[2 + 1]));break;end end end elseif (((3112 + 366)>=2078) and (v85<=(60 -27))) then v82[v84[4 -2]]=v82[v84[3]]%v82[v84[18 -14]];elseif ((v85==(34 + 0)) or ((12071 -7421)<=(2533 -(90 + 37 + 45)))) then v82[v84[4 -2]]={};else v36[v84[1 + 1 + 1]]=v82[v84[2]];end elseif ((v85<=(1995 -((3087 -(1591 + 239)) + 700))) or (172>((2380 -(1515 + 191)) + 652))) then if ((v85<=(33 + 3)) or ((8413 -6154)>=(4186 -(59 + 36)))) then local v160=0 + 0;local v161;local v162;local v163;local v164;local v165;local v166;while true do if ((v160==(2 -1)) or ((97 + 129)>=(4175 + 143))) then v163=nil;v164=nil;v160=2;end if (((538 + 41)==579) and (v160==(319 -(95 + 224)))) then v161=0 -0;v162=nil;v160=3 -2;end if (((283 -180)<=(20598 -16203)) and (v160==(310 -(206 + 102)))) then v165=nil;v166=nil;v160=3 + 0;end if ((v160==3) or ((827 + 1720)<(7609 -5974))) then while true do if ((v161==(1837 -(499 + 1336))) or ((1108 + 2745)==(1579 -966))) then v166=nil;while true do if ((v162==(44 -((48 -22) + 18))) or (1903>(18040 -13200))) then local v253=0 -0;local v254;while true do if (((5410 -(959 + 172))<4835) and (v253==(0 + 0 + 0))) then v254=0;while true do if (((0 + 0)==v254) or (347>(3036 -(108 + 94)))) then local v294=(0 -0) + 0 + 0;while true do if ((v294==(0 -0)) or ((395 + 1094)<=(2608 -(569 + 1119 + 278)))) then v163=v84[5 -(2 + 1)];v164,v165=v79(v82[v163](v82[v163 + (1279 -(412 + (2629 -(164 + 1599))))]));v294=2 -1;end if ((3416<=((15567 -11913) -(16 + 97))) and (v294==(272 -(244 + 27)))) then v254=192 -(97 + 94);break;end end end if (((1 + 0)==v254) or ((2156 -540)>(6250 -(1228 + 607)))) then v162=1;break;end end break;end end end if ((272==(485 -(864 -(93 + 558)))) and (v162==(1350 -(1260 + 89)))) then local v255=95 -(68 + 27);local v256;while true do if ((3842<(3456 + 738)) and (v255==(0 -0))) then v256=0 + 0;while true do if (((2431 -((131 -45) + 377))==((8024 -4812) -(422 + 14 + 84 + 724))) and (v256==(1 + 0))) then v162=(7 + 0) -5;break;end if ((v256==(0 -0)) or (4043<=(4771 -(245 + 1507)))) then v69=(v165 + v163) -(1388 -(778 + 609));v166=0 + (0 -0);v256=1917 -(1322 + 594);end end break;end end end if ((v162==(2 -0)) or ((2083 -((2214 -(1042 + 558)) + 68))>(680 + 893))) then for v272=v163,v69 do local v273=0;while true do if ((v273==(0 + (1939 -(1714 + 225)))) or ((163 + 523)>=2699)) then v166=v166 + 1;v82[v272]=v164[v166];break;end end end break;end end break;end if ((v161==(1966 -(854 + 270 + 841))) or (1727<=(682 -(36 + 84)))) then local v229=0;while true do if (((1053 -(280 + 139 + 332))==(2286 -(798 + 1186))) and (v229==0)) then v164=nil;v165=nil;v229=1;end if ((((2905 + 348) -1784)>(724 -(167 + 181))) and ((1 + 0)==v229)) then v161=2;break;end end end if ((v161==(880 -(336 + 544))) or ((6160 -3308)<(1635 + 872))) then local v230=0 + 0;while true do if ((4680>=2929) and ((1367 -(975 + 392))==v230)) then v162=862 -(364 + 498);v163=nil;v230=1 + 0;end if (((1138 -702)<=(9590 -6809)) and (v230==1)) then v161=1 + 0;break;end end end end break;end end elseif ((v85>(467 -(334 + 96))) or (2940<18)) then if ((v84[4 -2]==v82[v84[4]]) or ((5123 -(50 + 1341))<(4543 -(73 + 1144)))) then v68=v68 + 1;else v68=v84[7 -4];end else v82[v84[2 + 0]][v82[v84[3 + 0]]]=v84[5 -1];end elseif ((((6797 -(605 + 199)) -(780 + 240))>(7703 -5384)) and (v85<=39)) then local v167=0 -0;local v168;local v169;local v170;local v171;local v172;while true do if (((1642 + 577)<(4024 -1472)) and (v167==(0 + 0))) then v168=0 -0;v169=nil;v167=1 + 0;end if (((185 + 171)==356) and (v167==(1 + 0))) then v170=nil;v171=nil;v167=(19 -11) -(3 + 3);end if (((1245 + 349)<(381 + 1461)) and (v167==((4 -1) -1))) then v172=nil;while true do if (((2086 -(884 + 89))<(8781 -6518)) and (v168==((1507 -(164 + 1343)) + 0))) then local v231=0 + 0;while true do if (((1 + (1360 -(1037 + 323)))==v231) or ((8377 -3925)<(2892 + 1358))) then v168=1 + 0;break;end if ((v231==(0 -0)) or ((4684 -(217 + 1184))==(429 + 3077))) then v169=0 + 0 + 0;v170=nil;v231=402 -(208 + 193);end end end if (((4462 -3110)<(4169 -(431 + 147))) and (v168==(2 + 0))) then while true do if ((v169==0) or ((2062 -(636 + 402))>=(14784 -10704))) then local v257=0 -(0 + 0);local v258;while true do if (((4018 + (688 -401))>=3309) and (v257==0)) then v258=0;while true do if ((v258==1) or ((1096 + 621)==4013)) then v169=1;break;end if ((v258==(0 -0)) or ((7088 -3607)<=(1159 -(509 + 345)))) then local v295=0;while true do if ((v295==((982 -282) -(565 + 134))) or ((2214 -(345 + 520))>4103)) then v258=2 -1;break;end if ((((26113 -18643) -3200)<=((5263 -(6 + 22)) -(409 + (1222 -827)))) and ((417 -(111 + 306))==v295)) then v170=v84[2 + 0];v171=v82[v170];v295=1 + 0;end end end end break;end end end if ((((1773 -(201 + 1568)) -3)==v169) or ((2132 -419)>=((16352 + 1510) -13663))) then v172=v82[v170 + 2];if (((12254 -8682)>1372) and (v172>(358 -(285 + 73)))) then if (((15601 -11558)==4043) and (v171>v82[v170 + (1 -0)])) then v68=v84[377 -(42 + 332)];else v82[v170 + (12 -(6 + 3))]=v171;end elseif (((4981 -2497)>(2930 -(121 + 751))) and (v171<v82[v170 + (653 -(35 + 617))])) then v68=v84[495 -(112 + (574 -(183 + 11)))];else v82[v170 + 2 + 1]=v171;end break;end end break;end if ((v168==(270 -(93 + 176))) or ((7527 -5510)==(2344 -1385))) then v171=nil;v172=nil;v168=1 + 1;end end break;end end elseif ((v85==(26 + 14)) or (127>=((9376 -4726) -(1008 + 324)))) then v82[v84[675 -((2452 -(326 + 1522)) + 69)]]=v84[1215 -(1092 + 120)];else v82[v84[2 + 0]]=v82[v84[9 -6]]%v84[6 -2];end v68=v68 + (2 -1);break;end if (((2143 -(121 + 270))==(1712 + 40)) and (v89==(0 + 0))) then local v96=0 -0;local v97;while true do if ((((1096 -(300 + 244)) + 1449)<=(23142 -(18733 -(119 + 407)))) and (v96==(336 -(249 + 87)))) then v97=0 + 0;while true do if (((715 + 983)<=(10082 -7961)) and (1==v97)) then v89=1478 -(1428 + 49);break;end if ((v97==0) or (537>3193)) then local v112=0 + 0;while true do if ((4589>=(5584 -2941)) and (v112==(0 + 0))) then v84=v76[v68];v85=v84[1529 -(1240 + 288)];v112=1 -0;end if ((v112==1) or ((4732 -(4066 -(109 + 680)))<=(1266 -(242 + 80)))) then v97=1 -0;break;end end end end break;end end end end break;end end end end A,B=v27(v10(v72));if  not A[1] then local v86=v34[4][v68] or "?";error("Script error at ["   .. v86   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end return v29(v28(),{},v16)(...);end if (v17==4) then function v24()local v58=v23();local v59=v23();return (( -(2 -0) * v20(v59,(1814 -(1144 + 649)) + 11)) + 1 + 0) * ((1900 -(252 + (2774 -(282 + 846))))^(v20(v59,48 -27,31) -1023)) * ((((v20(v59,15 -(9 + 5),20) * ((1 + 1)^(57 -25))) + v58)/(((2621 -(1135 + 566)) -(59 + 859))^((41 + 47) -(27 + 9)))) + 1 + 0);end v25=nil;function v25(v37)local v60;if  not v37 then v37=v23();if (v37==(0 + 0)) then return "";end end v60=v3(v15,v18,(v18 + v37) -1);v18=v18 + v37;local v61={};for v62=515 -(146 + 368), #v60 do v61[v62]=v2(v1(v3(v60,v62,v62)));end return v6(v61);end v17=5;end end end vv8(),...);end
